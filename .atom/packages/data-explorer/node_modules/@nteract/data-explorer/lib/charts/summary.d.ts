/// <reference types="react" />
import * as Dx from "../types";
import { numeralFormatting } from "../utilities";
interface SummaryOptions {
    chart: Dx.Chart;
    colors: Dx.ChartOptions["colors"];
    primaryKey: string[];
    setColor: Dx.ChartOptions["setColor"];
    summaryType: Dx.SummaryType;
}
export declare const semioticSummaryChart: (data: Dx.Datapoint[], schema: Dx.Schema, options: SummaryOptions) => {
    afterElements?: JSX.Element | undefined;
    summaryType: {
        type: Dx.SummaryType;
        bins: number;
        amplitude: number;
    };
    type: string | false;
    projection: string;
    data: Dx.Datapoint[];
    oAccessor: string;
    rAccessor: string;
    summaryStyle: (summaryDatapoint: Dx.Datapoint) => {
        fill: string;
        fillOpacity: number;
        stroke: string;
    };
    style: (pieceDatapoint: Dx.Datapoint) => {
        fill: string;
        stroke: string;
    };
    oPadding: number;
    oLabel: boolean | ((columnName: string) => JSX.Element);
    margin: {
        top: number;
        right: number;
        bottom: number;
        left: number;
    };
    axis: {
        orient: string;
        label: string;
        tickFormat: typeof numeralFormatting;
    };
    baseMarkProps: {
        forceUpdate: boolean;
    };
    pieceHoverAnnotation: boolean;
    tooltipContent: (hoveredDatapoint: Dx.Datapoint) => JSX.Element;
};
export {};
