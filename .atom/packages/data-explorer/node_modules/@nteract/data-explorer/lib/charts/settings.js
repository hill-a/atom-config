"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const semiotic_1 = require("semiotic");
const ParallelCoordinatesController_1 = __importDefault(require("../ParallelCoordinatesController"));
const bar_1 = require("./bar");
const hierarchical_1 = require("./hierarchical");
const line_1 = require("./line");
const network_1 = require("./network");
const summary_1 = require("./summary");
const xyplot_1 = require("./xyplot");
const semioticParallelCoordinates = (data, schema, options) => {
    return {
        data,
        schema,
        options
    };
};
exports.semioticSettings = {
    line: {
        Frame: semiotic_1.ResponsiveXYFrame,
        controls: "switch between linetype",
        chartGenerator: line_1.semioticLineChart
    },
    scatter: {
        Frame: semiotic_1.ResponsiveXYFrame,
        controls: "switch between modes",
        chartGenerator: xyplot_1.semioticScatterplot
    },
    hexbin: {
        Frame: semiotic_1.ResponsiveXYFrame,
        controls: "switch between modes",
        chartGenerator: xyplot_1.semioticHexbin
    },
    bar: {
        Frame: semiotic_1.ResponsiveOrdinalFrame,
        controls: "switch between modes",
        chartGenerator: bar_1.semioticBarChart
    },
    summary: {
        Frame: semiotic_1.ResponsiveOrdinalFrame,
        controls: "switch between modes",
        chartGenerator: summary_1.semioticSummaryChart
    },
    network: {
        Frame: semiotic_1.ResponsiveNetworkFrame,
        controls: "switch between modes",
        chartGenerator: network_1.semioticNetwork
    },
    hierarchy: {
        Frame: semiotic_1.ResponsiveNetworkFrame,
        controls: "switch between modes",
        chartGenerator: hierarchical_1.semioticHierarchicalChart
    },
    parallel: {
        Frame: ParallelCoordinatesController_1.default,
        controls: "switch between modes",
        chartGenerator: semioticParallelCoordinates
    }
};
