import * as React from "react";
import { Toolbar } from "./components/Toolbar";
import { Viz } from "./components/Viz";
export { DataExplorer, Toolbar, Viz };
import * as Dx from "./types";
import { AreaType, Chart, HierarchyType, LineType, NetworkType, PieceType, SummaryType, View } from "./types";
interface dxMetaProps {
    view?: View;
    lineType?: LineType;
    areaType?: AreaType;
    selectedDimensions?: string[];
    selectedMetrics?: string[];
    pieceType?: PieceType;
    summaryType?: SummaryType;
    networkType?: NetworkType;
    hierarchyType?: HierarchyType;
    trendLine?: Dx.TrendLineType;
    marginalGraphics?: SummaryType;
    barGrouping?: Dx.BarGroupingType;
    colors?: string[];
    chart?: Chart;
}
interface Metadata {
    dx: dxMetaProps;
    sampled?: boolean;
}
export interface Props {
    data: Dx.DataProps;
    metadata: Metadata;
    theme?: string;
    expanded?: boolean;
    height?: number;
    models?: {};
    mediaType: "application/vnd.dataresource+json";
    initialView: View;
    onMetadataChange?: ({ dx }: {
        dx: dxMetaProps;
    }, mediaType: Props["mediaType"]) => void;
}
interface State {
    largeDataset: boolean;
    view: View;
    colors: string[];
    metrics: Dx.Field[];
    dimensions: Dx.Dimension[];
    selectedMetrics: string[];
    selectedDimensions: string[];
    networkType: NetworkType;
    hierarchyType: HierarchyType;
    pieceType: PieceType;
    summaryType: SummaryType;
    lineType: LineType;
    areaType: AreaType;
    chart: Chart;
    displayChart: DisplayChart;
    primaryKey: string[];
    data: Dx.Datapoint[];
    trendLine: Dx.TrendLineType;
    marginalGraphics: Dx.SummaryType;
    barGrouping: Dx.BarGroupingType;
}
interface DisplayChart {
    [chartKey: string]: React.ReactNode;
}
declare class DataExplorer extends React.PureComponent<Partial<Props>, State> {
    static MIMETYPE: Props["mediaType"];
    static defaultProps: {
        metadata: {
            dx: {};
        };
        height: number;
        mediaType: "application/vnd.dataresource+json";
        initialView: string;
    };
    constructor(props: Props);
    componentDidMount(): void;
    updateChart: (updatedState: Partial<State>) => void;
    setView: (view: Dx.View) => void;
    updateMetadata: (overrideProps: object) => void;
    setGrid: () => void;
    setColor: (newColorArray: string[]) => void;
    setLineType: (selectedLineType: Dx.LineType) => void;
    setAreaType: (selectedAreaType: Dx.AreaType) => void;
    updateDimensions: (selectedDimension: string) => void;
    updateMetrics: (selectedMetric: string) => void;
    render(): JSX.Element;
}
declare const DataExplorerDefault: React.FunctionComponent<Props> & {
    MIMETYPE: Props["mediaType"];
};
export default DataExplorerDefault;
