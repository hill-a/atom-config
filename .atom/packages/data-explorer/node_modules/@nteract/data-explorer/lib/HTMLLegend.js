"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const PalettePicker_1 = __importDefault(require("./PalettePicker"));
const CircleSpan = styled_components_1.default.span `
  & {
    display: inline-block;
    width: 20px;
    height: 20px;
    margin-right: 5px;
    border-radius: 20px;
    margin-bottom: -5px;
  }
`;
const LegendItemSpan = styled_components_1.default.span `
  & {
    display: inline-block;
    min-width: 80px;
    margin: 5px;
  }
`;
const LegendWrapper = styled_components_1.default.div `
  & {
    margin-top: 20px;
  }
`;
const HTMLLegend = ({ values, colorHash, valueHash, colors = [], setColor }) => {
    const updateColorFn = (newColorArray) => {
        setColor(newColorArray);
    };
    return (React.createElement(LegendWrapper, null,
        (values.length > 18
            ? // limit the displayed values to the top 18 and bin everything else into Other
                [...values.filter((d, index) => index < 18), "Other"]
            : values).map((value, index) => colorHash[value] && (React.createElement(LegendItemSpan, { key: `legend-item-${index}` },
            React.createElement(CircleSpan, { style: {
                    background: colorHash[value]
                } }),
            React.createElement("span", { className: "html-legend-item" }, value),
            (valueHash[value] &&
                valueHash[value] > 1 &&
                `(${valueHash[value]})`) ||
                ""))),
        setColor && (React.createElement(PalettePicker_1.default, { colors: colors, updateColor: updateColorFn }))));
};
exports.default = HTMLLegend;
