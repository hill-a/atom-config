(function() {
  var defaultPrecompiled;

  module.exports = defaultPrecompiled = {
    c: ["assert.h", "complex.h", "ctype.h", "errno.h", "fenv.h", "float.h", "inttypes.h", "iso646.h", "limits.h", "locale.h", "math.h", "setjmp.h", "signal.h", "stdalign.h", "stdarg.h", "stdatomic.h", "stdbool.h", "stddef.h", "stdint.h", "stdio.h", "stdlib.h", "stdnoreturn.h", "string.h", "tgmath.h", "threads.h", "time.h", "uchar.h", "wchar.h", "wctype.h"],
    cpp: ["cassert", "cctype", "cerrno", "cfloat", "ciso646", "climits", "clocale", "cmath", "csetjmp", "csignal", "cstdarg", "cstddef", "cstdio", "cstdlib", "cstring", "ctime", "cwchar", "cwctype", "deque", "list", "map", "queue", "set", "stack", "vector", "fstream", "iomanip", "ios", "iosfwd", "iostream", "istream", "ostream", "sstream", "streambuf", "algorithm", "bitset", "complex", "exception", "functional", "iterator", "limits", "locale", "memory", "new", "numeric", "stdexcept", "string", "typeinfo", "utility", "valarray"],
    objc: [],
    objcpp: []
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL2hvbWUvYWgyNTc5NjIvLmF0b20vcGFja2FnZXMvYXV0b2NvbXBsZXRlLWNsYW5nL2xpYi9kZWZhdWx0LXByZWNvbXBpbGVkLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQUE7O0VBQUEsTUFBTSxDQUFDLE9BQVAsR0FDRSxrQkFBQSxHQUNFO0lBQUEsQ0FBQSxFQUFHLENBQ0QsVUFEQyxFQUVELFdBRkMsRUFHRCxTQUhDLEVBSUQsU0FKQyxFQUtELFFBTEMsRUFNRCxTQU5DLEVBT0QsWUFQQyxFQVFELFVBUkMsRUFTRCxVQVRDLEVBVUQsVUFWQyxFQVdELFFBWEMsRUFZRCxVQVpDLEVBYUQsVUFiQyxFQWNELFlBZEMsRUFlRCxVQWZDLEVBZ0JELGFBaEJDLEVBaUJELFdBakJDLEVBa0JELFVBbEJDLEVBbUJELFVBbkJDLEVBb0JELFNBcEJDLEVBcUJELFVBckJDLEVBc0JELGVBdEJDLEVBdUJELFVBdkJDLEVBd0JELFVBeEJDLEVBeUJELFdBekJDLEVBMEJELFFBMUJDLEVBMkJELFNBM0JDLEVBNEJELFNBNUJDLEVBNkJELFVBN0JDLENBQUg7SUErQkEsR0FBQSxFQUFLLENBQ0gsU0FERyxFQUVILFFBRkcsRUFHSCxRQUhHLEVBSUgsUUFKRyxFQUtILFNBTEcsRUFNSCxTQU5HLEVBT0gsU0FQRyxFQVFILE9BUkcsRUFTSCxTQVRHLEVBVUgsU0FWRyxFQVdILFNBWEcsRUFZSCxTQVpHLEVBYUgsUUFiRyxFQWNILFNBZEcsRUFlSCxTQWZHLEVBZ0JILE9BaEJHLEVBaUJILFFBakJHLEVBa0JILFNBbEJHLEVBbUJILE9BbkJHLEVBb0JILE1BcEJHLEVBcUJILEtBckJHLEVBc0JILE9BdEJHLEVBdUJILEtBdkJHLEVBd0JILE9BeEJHLEVBeUJILFFBekJHLEVBMEJILFNBMUJHLEVBMkJILFNBM0JHLEVBNEJILEtBNUJHLEVBNkJILFFBN0JHLEVBOEJILFVBOUJHLEVBK0JILFNBL0JHLEVBZ0NILFNBaENHLEVBaUNILFNBakNHLEVBa0NILFdBbENHLEVBbUNILFdBbkNHLEVBb0NILFFBcENHLEVBcUNILFNBckNHLEVBc0NILFdBdENHLEVBdUNILFlBdkNHLEVBd0NILFVBeENHLEVBeUNILFFBekNHLEVBMENILFFBMUNHLEVBMkNILFFBM0NHLEVBNENILEtBNUNHLEVBNkNILFNBN0NHLEVBOENILFdBOUNHLEVBK0NILFFBL0NHLEVBZ0RILFVBaERHLEVBaURILFNBakRHLEVBa0RILFVBbERHLENBL0JMO0lBbUZBLElBQUEsRUFBSyxFQW5GTDtJQW9GQSxNQUFBLEVBQU8sRUFwRlA7O0FBRkoiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9XG4gIGRlZmF1bHRQcmVjb21waWxlZCA9XG4gICAgYzogW1xuICAgICAgXCJhc3NlcnQuaFwiLFxuICAgICAgXCJjb21wbGV4LmhcIixcbiAgICAgIFwiY3R5cGUuaFwiLFxuICAgICAgXCJlcnJuby5oXCIsXG4gICAgICBcImZlbnYuaFwiLFxuICAgICAgXCJmbG9hdC5oXCIsXG4gICAgICBcImludHR5cGVzLmhcIixcbiAgICAgIFwiaXNvNjQ2LmhcIixcbiAgICAgIFwibGltaXRzLmhcIixcbiAgICAgIFwibG9jYWxlLmhcIixcbiAgICAgIFwibWF0aC5oXCIsXG4gICAgICBcInNldGptcC5oXCIsXG4gICAgICBcInNpZ25hbC5oXCIsXG4gICAgICBcInN0ZGFsaWduLmhcIixcbiAgICAgIFwic3RkYXJnLmhcIixcbiAgICAgIFwic3RkYXRvbWljLmhcIixcbiAgICAgIFwic3RkYm9vbC5oXCIsXG4gICAgICBcInN0ZGRlZi5oXCIsXG4gICAgICBcInN0ZGludC5oXCIsXG4gICAgICBcInN0ZGlvLmhcIixcbiAgICAgIFwic3RkbGliLmhcIixcbiAgICAgIFwic3Rkbm9yZXR1cm4uaFwiLFxuICAgICAgXCJzdHJpbmcuaFwiLFxuICAgICAgXCJ0Z21hdGguaFwiLFxuICAgICAgXCJ0aHJlYWRzLmhcIixcbiAgICAgIFwidGltZS5oXCIsXG4gICAgICBcInVjaGFyLmhcIixcbiAgICAgIFwid2NoYXIuaFwiLFxuICAgICAgXCJ3Y3R5cGUuaFwiLFxuICAgICAgXVxuICAgIGNwcDogW1xuICAgICAgXCJjYXNzZXJ0XCIsXG4gICAgICBcImNjdHlwZVwiLFxuICAgICAgXCJjZXJybm9cIixcbiAgICAgIFwiY2Zsb2F0XCIsXG4gICAgICBcImNpc282NDZcIixcbiAgICAgIFwiY2xpbWl0c1wiLFxuICAgICAgXCJjbG9jYWxlXCIsXG4gICAgICBcImNtYXRoXCIsXG4gICAgICBcImNzZXRqbXBcIixcbiAgICAgIFwiY3NpZ25hbFwiLFxuICAgICAgXCJjc3RkYXJnXCIsXG4gICAgICBcImNzdGRkZWZcIixcbiAgICAgIFwiY3N0ZGlvXCIsXG4gICAgICBcImNzdGRsaWJcIixcbiAgICAgIFwiY3N0cmluZ1wiLFxuICAgICAgXCJjdGltZVwiLFxuICAgICAgXCJjd2NoYXJcIixcbiAgICAgIFwiY3djdHlwZVwiLFxuICAgICAgXCJkZXF1ZVwiLFxuICAgICAgXCJsaXN0XCIsXG4gICAgICBcIm1hcFwiLFxuICAgICAgXCJxdWV1ZVwiLFxuICAgICAgXCJzZXRcIixcbiAgICAgIFwic3RhY2tcIixcbiAgICAgIFwidmVjdG9yXCIsXG4gICAgICBcImZzdHJlYW1cIixcbiAgICAgIFwiaW9tYW5pcFwiLFxuICAgICAgXCJpb3NcIixcbiAgICAgIFwiaW9zZndkXCIsXG4gICAgICBcImlvc3RyZWFtXCIsXG4gICAgICBcImlzdHJlYW1cIixcbiAgICAgIFwib3N0cmVhbVwiLFxuICAgICAgXCJzc3RyZWFtXCIsXG4gICAgICBcInN0cmVhbWJ1ZlwiLFxuICAgICAgXCJhbGdvcml0aG1cIixcbiAgICAgIFwiYml0c2V0XCIsXG4gICAgICBcImNvbXBsZXhcIixcbiAgICAgIFwiZXhjZXB0aW9uXCIsXG4gICAgICBcImZ1bmN0aW9uYWxcIixcbiAgICAgIFwiaXRlcmF0b3JcIixcbiAgICAgIFwibGltaXRzXCIsXG4gICAgICBcImxvY2FsZVwiLFxuICAgICAgXCJtZW1vcnlcIixcbiAgICAgIFwibmV3XCIsXG4gICAgICBcIm51bWVyaWNcIixcbiAgICAgIFwic3RkZXhjZXB0XCIsXG4gICAgICBcInN0cmluZ1wiLFxuICAgICAgXCJ0eXBlaW5mb1wiLFxuICAgICAgXCJ1dGlsaXR5XCIsXG4gICAgICBcInZhbGFycmF5XCIsXG4gICAgICBdXG4gICAgb2JqYzpbXVxuICAgIG9iamNwcDpbXVxuIl19
